# Default values for adguardsync-chart.
# This is a YAML-formatted file.

replicaCount: 1

image:
  repository: ghcr.io/bakito/adguardhome-sync
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: 
  runAsUser: 1000
  fsGroup: 1000
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault
  

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000
  allowPrivilegeEscalation: false

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http


# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true


config:
  # cron expression to run in daemon mode. (default = run every 2 hours)
  cron: "0 */2 * * *"

  # runs the synchronisation on startup
  runOnStart: true

  # If enabled, the synchronisation task will not fail on single errors, but will log the errors and continue
  continueOnError: true

  origin:
    # url of the origin instance
    url: http://primarydns
    apiPath: "/control"
    insecureSkipVerify: true  # disable tls check
    username: username
    password:
      secretKeyRef:
        name: "adh-sync-secret"
        key: "origin"

  replicas:
    - url: http://replica1
      username: username
      password:
        secretKeyRef:
          name: "adh-sync-secret"
          key: "replica1"
      autosetup: true
      webURL: ""

    # - url: http://replica2
    #   username: username
    #   password:
    #     secretKeyRef:
    #       name: "adh-sync-secret"
    #       key: "replica2"
    #   autosetup: true
    #   webURL: ""

  api:
    enabled: true
    # Port, default 8080
    port: 8080
    # if username and password are defined, basic auth is applied to the sync API
    username: username
    password: 
      secretKeyRef:
        name: "adh-sync-secret"
        key: api
    # enable api dark mode
    darkMode: true

    # enable metrics on path '/metrics' (api port must be != 0)
    metrics:
      enabled: false
      scrapeInterval: 60s
      queryLogLimit: 10000


  # Configure sync features; by default all features are enabled.
  features:
    generalSettings: true
    queryLogConfig: true
    statsConfig: true
    clientSettings: true
    services: true
    filters: true
    dhcp:
      serverConfig: true
      staticLeases: true
    dns:
      serverConfig: true
      accessLists: true
      rewrites: true

service:
  type: ClusterIP
  port: 80

nodeSelector: {}

tolerations: []

affinity: {}


ingressRoute:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  entrypoints:
    - websecure
  match: "Host(`path`)"